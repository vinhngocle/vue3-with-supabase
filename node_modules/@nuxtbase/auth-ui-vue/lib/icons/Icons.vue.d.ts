import { Provider } from '@supabase/supabase-js';
import type { Component } from 'vue';
declare type ProviderMap = {
    [key in Partial<Provider>]: Component;
};
declare const providers: Partial<ProviderMap>;
declare const _default: import("vue").DefineComponent<__VLS_TypePropsToRuntimeProps<{
    name: keyof typeof providers;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_TypePropsToRuntimeProps<{
    name: keyof typeof providers;
}>>>, {}, {}>;
export default _default;
declare type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
declare type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
